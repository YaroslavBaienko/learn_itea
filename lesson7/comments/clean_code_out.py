"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
"""Example code"""


def read_data_from_file(filename: str):
    """Read lines from txt file"""
    result = []
    with open(filename, 'r') as file:  
        for line in file:
            line = line.strip()
            if line:
                result.append(line)
    return result


def write_line_count_file(filename: str, data_to_write):
    """Write lines count to file"""
    with open(filename, 'w') as file:
        for counter, data in enumerate(data_to_write, start=1):  
            file.write(f'{counter}. {data}\n')  


def main(filename):
    """Main controller"""
    data = read_data_from_file(filename)
    write_line_count_file(filename, data)


if __name__ == '__main__':
    main('example.txt')  
